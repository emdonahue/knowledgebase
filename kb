#!/bin/zsh

#TODO enable searching by keyword
#TODO add easy metadata editing shortcuts
#TODO test interactive editor programs by substituting EDITOR with echo
#TODO add ls sorting based on note modification time
#TODO automatically fix formatting on bibtex files after editing, including missing files
#TODO handle multiple filetypes that get added with same md5 (rtf and txt).
#TODO add search by md5

set -o errexit
set -o pipefail
if [[ "${TRACE-0}" == "1" ]]; then set -o xtrace; fi

set -o noclobber
unset c #Reserved variable for inline comments
export LC_COLLATE=C

DIRS=(inbox md5 text bib notes)
SCRIPT="$0"

function disambiguate() { # Accepts md5s or filenames based on md5s and presents a formatted select, returning a single md5
    local MD5S=("${(@f)$("$SCRIPT" ls -f)}")
    local PS3='Type a number to disambiguate: '
    [[ $#MD5S == 1 ]] && echo "$MD5S" && return
    select MD5 in "$MD5S[@]"; do
	[[ $REPLY -le $#MD5S ]] && echo "$MD5" && break
    done < /dev/tty
}

function search() {
    sed -E 's/(.*)(\..*)?/bib\/\1.bib/' | xargs -d\\n grep -Eil -e '^@\w+\{'"$*"'\,$' -e '^ *\w+={.*'"$*"'.*}, *' | sed -E 's_^bib/(.*)\.bib$_\1_'
}

function file2md5() {
    sed -E 's_^(.*/)*([[:alnum:]]+)(\..*)?$_\2_'
}

CMD="$1"

# Ensure proper directory structure
case "$CMD" in
    -h|--help|help|init);;
    *)
	for f in "${DIRS[@]}"; do
	    [[ -d "$f" ]] || {echo 'kb directory structure not detected. Use "kb init" to create a new directory structure.' >&2; exit 1}
	done
	;;
esac

[[ $# -ne 0 ]] && shift
case "$CMD" in
    --help|-h|help) #[SUBCOMMAND]; Prints help text for SUBCOMMAND. If SUBCOMMAND omitted, prints list of subcommands.
	[[ $# -eq 0 ]] && echo 'kb - Personal KnowledgeBase utility for organizing and searching PDFs, other text-based media, notes, etc.\nUsage: kb SUBCOMMAND [ARGUMENTS...]\n\nSubcommands:'
	sed -nE '/\s*'"$1"'\)\s#/'"${1:+,/^\s*;;\s*$/}"'{s/^[[:space:]]*([-|[:alnum:]]+)\)\s#([^;]*); (.*)/'"${${1-\t}:#$1}"'\1 \2\t\3/p; s/.*(\w+)[-+:]*=\w+ \$\{c#(.*); (.*)\}.*/\t-\1 \2\t\3/p}' "$SCRIPT"
	;;

    bib) #SEARCH; Opens the bibliography file with title matching SEARCH term using $EDITOR.
	grep -Eril '^ *\w+={.*'"$*.*}, *" bib | disambiguate_md5
	#${=EDITOR} bib/$(disambiguate ${(f)"$(grep -EZriH '^title={.*'"$*}," bib | sed -E 's|bib/(.*)\.bib\x00title\t(.*)|\2\t\1|')"} | sed -E 's/.*\t([^\t]+)$/\1/').bib
	;;
    
    import) #; Consumes files in inbox and generates appropriate archival copies, analysis extracts, and metadata containers.
	find inbox -type f -print0 | while read -d$'\0' f; do
	    IMPORT_MD5=$(md5sum "$f" | cut -f1 -d' ')
	    mv "$f" "md5/$IMPORT_MD5.$f:e"
	    [[ ! -f "bib/$IMPORT_MD5.bib" ]] && echo '@article{'"$IMPORT_MD5"',\ntitle={'"$f:t:r"'},\n}' > "bib/$IMPORT_MD5.bib"
	    [[ ! -f "notes/$IMPORT_MD5.org" ]] && echo '[[file:../md5/'"$IMPORT_MD5"'.'"$f:e"']['"$f:t:r"']]' > "notes/$IMPORT_MD5.org"
	done
	;;
    
    init) #; Generates a new directory structure for use by kb in the current directory.
	mkdir -p "${DIRS[@]}"
	;;

    ls) #[OPTION...] SEARCH; Lists files matching search criteria.
	#TODO use sed hold space to clip out title, author, year in desired order
	"$SCRIPT" md5 "$@" | sed -E 's_.*_bib/&.bib_' | xargs -d\\n sed -nE 's/^title=\{(.*)\},$/\1/p'
	;;

    md5) #[OPTION]... SEARCH; Searches for files matching SEARCH string and prints a list of md5's for further processing.
	#zparseopts -D -E i=INTERACTIVE ${c#}
	#{[[ $FILTER ]] && cat || ls -1t md5 | sed 's/\..*$//' | search "$@"} | ${${INTERACTIVE:-cat}:/$INTERACTIVE/disambiguate}
	case "$1" in
	    '') ls md5 | cut -c -32;;
	    -a) "$SCRIPT" md5 "$@[2,-1]";;
	    -o) join -a1 -a2 - <("$SCRIPT" md5 "$@[2,-1]");;
	    -q) "$SCRIPT" md5 | "$SCRIPT" md5 "$@[2,-1]";;
	    *)
		case "$2" in
		    -eq|-ne)
			sed 's_.*_bib/&.bib_' | xargs grep -Ei ${${2:/-eq/-l}:/-ne/-L} '^'"$1"'={.*'"$3"'.*},$' | file2md5
		    ;;
		    *) echo 'wildcard'
		    sed -E 's/(.*)(\..*)?/bib\/\1.bib/' | xargs -d\\n grep -Eil -e '^@\w+\{'"$*"'\,$' -e '^ *\w+={.*'"$*"'.*}, *' | sed -E 's_^bib/(.*)\.bib$_\1_'
		    echo 'wildcard search term'
		    ;;
		esac		
		;;
	esac
		
	;;
    
    notes) #SEARCH; Opens the notes file for the document with title matching the SEARCH term using $EDITOR.	
	${=EDITOR} notes/$(disambiguate ${(f)"$(grep -EZriH '^title'$'\t''.*'"$*" bib | sed -E 's|bib/(.*)\.bib\x00title\t(.*)|\2\t\1|')"} | sed -E 's/.*\t([^\t]+)$/\1/').org
	;;
    
    *)	
	"$SCRIPT" help >&2
	exit 1
	;;
esac
