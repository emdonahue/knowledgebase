#!/bin/zsh

#TODO make the notes search consume the whole search string
#TODO add editor for metadata
#TODO enable searching by keyword
#TODO add easy metadata editing shortcuts

set -o errexit
set -o pipefail
if [[ "${TRACE-0}" == "1" ]]; then set -o xtrace; fi

set -o noclobber
unset c #Reserved variable for inline comments

DIRS=(inbox md5 text bib notes)

function disambiguate() {
    local PS3='Type a number to disambiguate: '
    [[ $# == 1 ]] && echo "$1" && return
    select opt; do
	[[ $REPLY -le $# ]] && echo "$opt" && break
    done
}

CMD="$1"

# Ensure proper directory structure
case "$CMD" in
    -h|--help|help|init);;
    *)
	for f in "${DIRS[@]}"; do
	    [[ -d "$f" ]] || {echo 'kb directory structure not detected. Use "kb init" to create a new directory structure.' >&1; exit 1}
	done
	;;
esac

[[ $# -ne 0 ]] && shift
case "$CMD" in
    --help|-h|help) #[SUBCOMMAND]; Prints help text for SUBCOMMAND. If SUBCOMMAND omitted, prints list of subcommands.
	[[ $# -eq 0 ]] && echo 'kb - Personal KnowledgeBase utility for organizing and searching PDFs, other text-based media, notes, etc.\nUsage: kb SUBCOMMAND [ARGUMENTS...]\n\nSubcommands:'
	sed -nE '/\s*'"$1"'\)\s#/'"${1:+,/^\s*;;\s*$/}"'{s/^[[:space:]]*([-|[:alnum:]]+)\)\s#([^;]*); (.*)/'"${${1-\t}:#$1}"'\1 \2\t\3/p; s/.*(\w+)[-+:]*=\w+ \$\{c#(.*); (.*)\}.*/\t-\1 \2\t\3/p}' "$0"
	;;

    import) #; Consumes files in inbox and generates appropriate archival copies, analysis extracts, and metadata containers.
	find inbox -type f -print0 | while read -d$'\0' f; do
	    IMPORT_MD5=$(md5sum "$f" | cut -f1 -d' ')
	    mv "$f" "md5/$IMPORT_MD5.$f:e"
	    [[ ! -f "bib/$IMPORT_MD5.bib" ]] && echo 'title\t'"$f:t:r" > "bib/$IMPORT_MD5.bib"
	    [[ ! -f "notes/$IMPORT_MD5.org" ]] && echo '[[file:../md5/'"$IMPORT_MD5"'.'"$f:e"']['"$f:t:r"']]' > "notes/$IMPORT_MD5.org"
	done
	;;
    
    init) #; Generates a new directory structure for use by kb in the current directory.
	mkdir -p "${DIRS[@]}"
	;;

    ls) #; Lists files, newest first.
	ls -t md5 | sed 's/\..*$/.bib/;s|^|bib/|' | xargs grep -sE '^title' | cut -d$'\t' -f1 --complement
	;;

    notes) #SEARCH; Opens the notes file for the document with title matching the SEARCH term using $EDITOR.	
	${=EDITOR} notes/$(disambiguate ${(f)"$(grep -EZriH '^title'$'\t''.*'"$1" bib | sed -E 's|bib/(.*)\.bib\x00title\t(.*)|\2\t\1|')"} | sed -E 's/.*\t([^\t]+)$/\1/').org
	;;
    
    *)	
	"$0" help 1>&2
	exit 1
	;;
esac
