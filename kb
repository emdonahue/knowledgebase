#!/bin/zsh

#TODO enable searching by keyword
#TODO add easy metadata editing shortcuts

set -o errexit
set -o pipefail
if [[ "${TRACE-0}" == "1" ]]; then set -o xtrace; fi

set -o noclobber
unset c #Reserved variable for inline comments

DIRS=(inbox md5 text bib notes)

function disambiguate() {
    local PS3='Type a number to disambiguate: '
    [[ $# == 1 ]] && echo "$1" && return
    select opt; do
	[[ $REPLY -le $# ]] && echo "$opt" && break
    done
}

function disambiguate_md5() { # Accepts md5s or filenames based on md5s and presents a formatted select, returning a single md5
    #disambiguate ${(f)
    sed -nE 's/^title=\{(.*)\},/\1/p' bib/${^${(@f)$(< /dev/stdin):t:r}}.bib
    #local x=(bib/${^${(@f)$(< /dev/stdin):t:r}}.bib)
}

function search() {
    xargs -0 -I{} grep -Eil -e '^@\w+\{'"$*"'\,$' -e '^ *\w+={.*'"$*"'.*}, *' bib/{}.bib | sed -E 's_^bib/(.*)\.bib$_\1_'
}

CMD="$1"

# Ensure proper directory structure
case "$CMD" in
    -h|--help|help|init);;
    *)
	for f in "${DIRS[@]}"; do
	    [[ -d "$f" ]] || {echo 'kb directory structure not detected. Use "kb init" to create a new directory structure.' >&1; exit 1}
	done
	;;
esac

[[ $# -ne 0 ]] && shift
case "$CMD" in
    --help|-h|help) #[SUBCOMMAND]; Prints help text for SUBCOMMAND. If SUBCOMMAND omitted, prints list of subcommands.
	[[ $# -eq 0 ]] && echo 'kb - Personal KnowledgeBase utility for organizing and searching PDFs, other text-based media, notes, etc.\nUsage: kb SUBCOMMAND [ARGUMENTS...]\n\nSubcommands:'
	sed -nE '/\s*'"$1"'\)\s#/'"${1:+,/^\s*;;\s*$/}"'{s/^[[:space:]]*([-|[:alnum:]]+)\)\s#([^;]*); (.*)/'"${${1-\t}:#$1}"'\1 \2\t\3/p; s/.*(\w+)[-+:]*=\w+ \$\{c#(.*); (.*)\}.*/\t-\1 \2\t\3/p}' "$0"
	;;

    bib) #SEARCH; Opens the bibliography file with title matching SEARCH term using $EDITOR.
	grep -Eril '^ *\w+={.*'"$*.*}, *" bib | disambiguate_md5
	#${=EDITOR} bib/$(disambiguate ${(f)"$(grep -EZriH '^title={.*'"$*}," bib | sed -E 's|bib/(.*)\.bib\x00title\t(.*)|\2\t\1|')"} | sed -E 's/.*\t([^\t]+)$/\1/').bib
	;;
    
    import) #; Consumes files in inbox and generates appropriate archival copies, analysis extracts, and metadata containers.
	find inbox -type f -print0 | while read -d$'\0' f; do
	    IMPORT_MD5=$(md5sum "$f" | cut -f1 -d' ')
	    mv "$f" "md5/$IMPORT_MD5.$f:e"
	    [[ ! -f "bib/$IMPORT_MD5.bib" ]] && echo '@article{'"$IMPORT_MD5"',\ntitle={'"$f:t:r"'},\n}' > "bib/$IMPORT_MD5.bib"
	    [[ ! -f "notes/$IMPORT_MD5.org" ]] && echo '[[file:../md5/'"$IMPORT_MD5"'.'"$f:e"']['"$f:t:r"']]' > "notes/$IMPORT_MD5.org"
	done
	;;
    
    init) #; Generates a new directory structure for use by kb in the current directory.
	mkdir -p "${DIRS[@]}"
	;;

    ls) #[OPTION...] SEARCH; Lists files matching search criteria.
	#TODO use sed hold space to clip out title, author, year in desired order
	"$0" md5 "$@" | xargs -d\\n -I{} sed -nE 's/^title=\{(.*)\},$/\1/p' bib/{}.bib
	;;

    md5) #[OPTION]... SEARCH; Searches for files matching SEARCH string and prints a list of md5's for further processing. SEARCH is matched against all bibtex fields and the md5 hash itself. Use options to limit the bibtex search or search notes or fulltext.
	ls -t -1 md5 | sed 's/\..*$//' | tr '\n' '\0' | search "$@"
	;;
    
    notes) #SEARCH; Opens the notes file for the document with title matching the SEARCH term using $EDITOR.	
	${=EDITOR} notes/$(disambiguate ${(f)"$(grep -EZriH '^title'$'\t''.*'"$*" bib | sed -E 's|bib/(.*)\.bib\x00title\t(.*)|\2\t\1|')"} | sed -E 's/.*\t([^\t]+)$/\1/').org
	;;
    
    *)	
	"$0" help 1>&2
	exit 1
	;;
esac
