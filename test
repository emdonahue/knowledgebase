#!/bin/zsh

assert() {
    if [[ $# == 1 || "$2" != "$3" ]]; then
	echo "Failure: $1"
	ERR=1
	if [[ "$2" != "$3" ]]; then echo "\tExpected: $3\n\tReceived: $2"; fi
    fi
}

function teardown() {
    cd "$DIR"
    rm -rf inbox md5 text org bib
}

AMD5=$(md5sum <<< 'a' | cut -f1 -d' ')
BMD5=$(md5sum <<< 'b' | cut -f1 -d' ')
CMD5=$(md5sum <<< 'c' | cut -f1 -d' ')

KB=$(realpath ./kb)
DIR=$(mktemp -d)
trap "rm -rf $DIR" EXIT
cd "$DIR"

assert 'bad file structure' "$($KB import 2>&1)" 'kb directory structure not detected. Use "kb init" to create a new directory structure.'

$KB init
echo 'a' > inbox/a.pdf
echo 'b' > inbox/b.txt
echo 'c' > inbox/c.txt
echo 'z' > md5/$AMD5.pdf

#import
$KB import
[[ -f inbox/a.pdf ]] && assert 'import inbox a'
[[ -f inbox/b.txt ]] && assert 'import inbox b'
[[ -f md5/$AMD5.pdf ]] || assert 'import m5d a'
[[ -f md5/$BMD5.txt ]] || assert 'import m5d b  '
[[ -f bib/$AMD5.bib ]] || assert 'import bib a'
[[ -f bib/$BMD5.bib ]] || assert 'import bib b'
[[ -f org/$AMD5.org ]] || assert 'import org a'
assert 'import org link' "$(head -n1 org/$AMD5.org)" '[[file:../md5/'"$AMD5"'.pdf][a]]'
[[ -f org/$BMD5.org ]] || assert 'import org b'
assert 'import bib' "$(cat bib/$AMD5.bib)" "$(echo '@article{'"$AMD5"',\ntitle={a},\n}')"

#md5
assert 'md5' "$($KB md5)" "$(echo "$CMD5\n$BMD5\n$AMD5")"
assert 'md5 -eq b' "$($KB md5 title -eq b)" "$(echo "$BMD5")"
assert 'md5 -eq a' "$($KB md5 title -eq a)" "$(echo "$AMD5")"
assert 'md5 -ne a' "$($KB md5 title -ne a)" "$(echo "$CMD5\n$BMD5")"
assert 'md5 -a' "$($KB md5 title -eq a -a title -eq a)" "$(echo "$AMD5")"
assert 'md5 implicit -a' "$($KB md5 title -eq a title -eq a)" "$(echo "$AMD5")"
assert 'md5 -o multiple' "$($KB md5 title -eq a -o title -eq c)" "$(echo "$CMD5\n$AMD5")"
assert 'md5 -o duplicate' "$($KB md5 title -eq a -o title -eq a)" "$(echo "$AMD5")"
assert 'md5 -i' "$($KB md5 -i title -eq a)" "$(echo "$AMD5")"

#ls
assert 'ls' "$($KB ls)" "$(echo 'c\nb\na')"
assert 'ls stdin' "$(echo "$AMD5" | $KB ls -a)" "$(echo "a")"

#org
assert 'org' "$(EDITOR=echo $KB org title -eq a)" "$(echo "org/$AMD5.org")"
assert 'org redundant query' "$(EDITOR=echo $KB org -i title -eq a)" "$(echo "org/$AMD5.org")"

[[ -z "$ERR" ]] && echo "All Tests Pass"
exit "$ERR"
